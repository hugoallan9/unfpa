fontSize = 10
themeDefault <- theme_set(theme_gray())
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = 18)
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
theme_set(ineTheme)
#tikz('pruebaLatex.tex', standAlone = TRUE, width=3.88, height=2.71)
porDepartamentoInternas <- as.data.frame(with(hospitalariasInternas, table(DEPTORESIDEN)))
porDepartamentoInternas <- ddply(porDepartamentoInternas, "DEPTORESIDEN" ,transform , Porcentaje=(Freq/sum(porDepartamento$Freq)*100))
distDepartamentos <- ggplot(porDepartamentoInternas, aes(x = DEPTORESIDEN, y = Porcentaje,))
distDepartamentos <- distDepartamentos + geom_bar(stat = 'identity',fill = 'blue')+ geom_text(aes(label= round(Porcentaje,1) ),size=2, angle = 90, hjust=-0.2, vjust = 0.5)
distDepartamentos <- distDepartamentos + theme(axis.text.x = element_text(vjust=0.5, hjust =1,angle = 90))
distDepartamentos <- distDepartamentos + scale_y_continuous(breaks = NULL,expand= c(0,0), limits = c(0, 1.05*max(porDepartamentoInternas$Porcentaje))) + scale_x_discrete(expand = waiver())
distDepartamentos <- distDepartamentos + theme(panel.background = element_rect(fill = "white"))
distDepartamentos <- distDepartamentos + labs(x="",y= "")  +theme(plot.margin= unit(c(0,0,0,0), "mm") )
distDepartamentos
fontSize = 10
themeDefault <- theme_set(theme_gray())
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize)
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
theme_set(ineTheme)
#tikz('pruebaLatex.tex', standAlone = TRUE, width=3.88, height=2.71)
porDepartamentoInternas <- as.data.frame(with(hospitalariasInternas, table(DEPTORESIDEN)))
porDepartamentoInternas <- ddply(porDepartamentoInternas, "DEPTORESIDEN" ,transform , Porcentaje=(Freq/sum(porDepartamento$Freq)*100))
distDepartamentos <- ggplot(porDepartamentoInternas, aes(x = DEPTORESIDEN, y = Porcentaje,))
distDepartamentos <- distDepartamentos + geom_bar(stat = 'identity',fill = 'blue')+ geom_text(aes(label= round(Porcentaje,1) ),size=2, angle = 90, hjust=-0.2, vjust = 0.5)
distDepartamentos <- distDepartamentos + theme(axis.text.x = element_text(vjust=0.5, hjust =1,angle = 90))
distDepartamentos <- distDepartamentos + scale_y_continuous(breaks = NULL,expand= c(0,0), limits = c(0, 1.05*max(porDepartamentoInternas$Porcentaje))) + scale_x_discrete(expand = waiver())
distDepartamentos <- distDepartamentos + theme(panel.background = element_rect(fill = "white"))
distDepartamentos <- distDepartamentos + labs(x="",y= "")  +theme(plot.margin= unit(c(0,0,0,0), "mm") )
distDepartamentos
fontSize = 14
themeDefault <- theme_set(theme_gray())
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize)
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
theme_set(ineTheme)
#tikz('pruebaLatex.tex', standAlone = TRUE, width=3.88, height=2.71)
porDepartamentoInternas <- as.data.frame(with(hospitalariasInternas, table(DEPTORESIDEN)))
porDepartamentoInternas <- ddply(porDepartamentoInternas, "DEPTORESIDEN" ,transform , Porcentaje=(Freq/sum(porDepartamento$Freq)*100))
distDepartamentos <- ggplot(porDepartamentoInternas, aes(x = DEPTORESIDEN, y = Porcentaje,))
distDepartamentos <- distDepartamentos + geom_bar(stat = 'identity',fill = 'blue')+ geom_text(aes(label= round(Porcentaje,1) ),size=2, angle = 90, hjust=-0.2, vjust = 0.5)
distDepartamentos <- distDepartamentos + theme(axis.text.x = element_text(vjust=0.5, hjust =1,angle = 90))
distDepartamentos <- distDepartamentos + scale_y_continuous(breaks = NULL,expand= c(0,0), limits = c(0, 1.05*max(porDepartamentoInternas$Porcentaje))) + scale_x_discrete(expand = waiver())
distDepartamentos <- distDepartamentos + theme(panel.background = element_rect(fill = "white"))
distDepartamentos <- distDepartamentos + labs(x="",y= "")  +theme(plot.margin= unit(c(0,0,0,0), "mm") )
distDepartamentos
fontSize = 10
themeDefault <- theme_set(theme_gray())
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize)
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
theme_set(ineTheme)
#tikz('pruebaLatex.tex', standAlone = TRUE, width=3.88, height=2.71)
porDepartamentoInternas <- as.data.frame(with(hospitalariasInternas, table(DEPTORESIDEN)))
porDepartamentoInternas <- ddply(porDepartamentoInternas, "DEPTORESIDEN" ,transform , Porcentaje=(Freq/sum(porDepartamento$Freq)*100))
distDepartamentos <- ggplot(porDepartamentoInternas, aes(x = DEPTORESIDEN, y = Porcentaje,))
distDepartamentos <- distDepartamentos + geom_bar(stat = 'identity',fill = 'blue')+ geom_text(aes(label= round(Porcentaje,1) ),size=2, angle = 90, hjust=-0.2, vjust = 0.5)
#distDepartamentos <- distDepartamentos + theme(axis.text.x = element_text(vjust=0.5, hjust =1,angle = 90))
distDepartamentos <- distDepartamentos + scale_y_continuous(breaks = NULL,expand= c(0,0), limits = c(0, 1.05*max(porDepartamentoInternas$Porcentaje))) + scale_x_discrete(expand = waiver())
distDepartamentos <- distDepartamentos + theme(panel.background = element_rect(fill = "white"))
distDepartamentos <- distDepartamentos + labs(x="",y= "")  +theme(plot.margin= unit(c(0,0,0,0), "mm") )
distDepartamentos
fontSize = 10
themeDefault <- theme_set(theme_gray())
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize)
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
theme_set(ineTheme)
#tikz('pruebaLatex.tex', standAlone = TRUE, width=3.88, height=2.71)
porDepartamentoInternas <- as.data.frame(with(hospitalariasInternas, table(DEPTORESIDEN)))
porDepartamentoInternas <- ddply(porDepartamentoInternas, "DEPTORESIDEN" ,transform , Porcentaje=(Freq/sum(porDepartamento$Freq)*100))
distDepartamentos <- ggplot(porDepartamentoInternas, aes(x = DEPTORESIDEN, y = Porcentaje,))
distDepartamentos <- distDepartamentos + geom_bar(stat = 'identity',fill = 'blue')+ geom_text(aes(label= round(Porcentaje,1) ),size=2, angle = 90, hjust=-0.2, vjust = 0.5)
#distDepartamentos <- distDepartamentos + theme(axis.text.x = element_text(vjust=0.5, hjust =1,angle = 90))
distDepartamentos <- distDepartamentos + scale_y_continuous(breaks = NULL,expand= c(0,0), limits = c(0, 1.05*max(porDepartamentoInternas$Porcentaje))) + scale_x_discrete(expand = waiver())
distDepartamentos <- distDepartamentos + theme(panel.background = element_rect(fill = "white"))
distDepartamentos <- distDepartamentos + labs(x="",y= "")  +theme(plot.margin= unit(c(0,0,0,0), "mm") )
distDepartamentos
fontSize = 10
themeDefault <- theme_set(theme_gray())
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize)
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
theme_set(ineTheme)
#tikz('pruebaLatex.tex', standAlone = TRUE, width=3.88, height=2.71)
porDepartamentoInternas <- as.data.frame(with(hospitalariasInternas, table(DEPTORESIDEN)))
porDepartamentoInternas <- ddply(porDepartamentoInternas, "DEPTORESIDEN" ,transform , Porcentaje=(Freq/sum(porDepartamento$Freq)*100))
distDepartamentos <- ggplot(porDepartamentoInternas, aes(x = DEPTORESIDEN, y = Porcentaje,))
distDepartamentos <- distDepartamentos + geom_bar(stat = 'identity',fill = 'blue')+ geom_text(aes(label= round(Porcentaje,1) ),size=2, angle = 90, hjust=-0.2, vjust = 0.5)
#distDepartamentos <- distDepartamentos + theme(axis.text.x = element_text(vjust=0.5, hjust =1,angle = 90))
distDepartamentos <- distDepartamentos + scale_y_continuous(breaks = NULL,expand= c(0,0), limits = c(0, 1.05*max(porDepartamentoInternas$Porcentaje))) + scale_x_discrete(expand = waiver())
distDepartamentos <- distDepartamentos + theme(panel.background = element_rect(fill = "white"))
distDepartamentos <- distDepartamentos + labs(x="",y= "")  +theme(plot.margin= unit(c(0,0,0,0), "mm") )
distDepartamentos
fontSize = 10
themeDefault <- theme_set(theme_gray())
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize)
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
theme_set(ineTheme)
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize)
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize)
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize)
#axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
fsadlk
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize)
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize),
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
fontSize = 10
themeDefault <- theme_set(theme_gray())
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize),
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
theme_set(ineTheme)
#tikz('pruebaLatex.tex', standAlone = TRUE, width=3.88, height=2.71)
porDepartamentoInternas <- as.data.frame(with(hospitalariasInternas, table(DEPTORESIDEN)))
porDepartamentoInternas <- ddply(porDepartamentoInternas, "DEPTORESIDEN" ,transform , Porcentaje=(Freq/sum(porDepartamento$Freq)*100))
distDepartamentos <- ggplot(porDepartamentoInternas, aes(x = DEPTORESIDEN, y = Porcentaje,))
distDepartamentos <- distDepartamentos + geom_bar(stat = 'identity',fill = 'blue')+ geom_text(aes(label= round(Porcentaje,1) ),size=2, angle = 90, hjust=-0.2, vjust = 0.5)
#distDepartamentos <- distDepartamentos + theme(axis.text.x = element_text(vjust=0.5, hjust =1,angle = 90))
distDepartamentos <- distDepartamentos + scale_y_continuous(breaks = NULL,expand= c(0,0), limits = c(0, 1.05*max(porDepartamentoInternas$Porcentaje))) + scale_x_discrete(expand = waiver())
distDepartamentos <- distDepartamentos + theme(panel.background = element_rect(fill = "white"))
distDepartamentos <- distDepartamentos + labs(x="",y= "")  +theme(plot.margin= unit(c(0,0,0,0), "mm") )
distDepartamentos
theme_get()
fontSize = 10
themeDefault <- theme_set(theme_gray())
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize),
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
theme_set(ineTheme)
theme_get()
#Paquetes necesarios para el funcionamiento de la rutina
require(ggplot2)
require(foreign)
require(plyr)
require(dataframes2xls)
require(tikzDevice)
require(grid)
require(extrafont)
font_import()
unwanted_array = list(    'Š'='S', 'š'='s', 'Ž'='Z', 'ž'='z', 'À'='A', 'Á'='A', 'Â'='A', 'Ã'='A', 'Ä'='A', 'Å'='A', 'Æ'='A', 'Ç'='C', 'È'='E', 'É'='E',
'Ê'='E', 'Ë'='E', 'Ì'='I', 'Í'='I', 'Î'='I', 'Ï'='I', 'Ñ'='N', 'Ò'='O', 'Ó'='O', 'Ô'='O', 'Õ'='O', 'Ö'='O', 'Ø'='O', 'Ù'='U',
'Ú'='U', 'Û'='U', 'Ü'='U', 'Ý'='Y', 'Þ'='B', 'ß'='Ss', 'à'='a', 'á'='a', 'â'='a', 'ã'='a', 'ä'='a', 'å'='a', 'æ'='a', 'ç'='c',
'è'='e', 'é'='e', 'ê'='e', 'ë'='e', 'ì'='i', 'í'='i', 'î'='i', 'ï'='i', 'ð'='o', 'ñ'='n', 'ò'='o', 'ó'='o', 'ô'='o', 'õ'='o',
'ö'='o', 'ø'='o', 'ù'='u', 'ú'='u', 'û'='u', 'ý'='y', 'ý'='y', 'þ'='b', 'ÿ'='y' )
#LECTURA DE LA BASE DE DATOS
#path in Win "D:/Dropbox/INE/Hospitalarias/Bases/SPSS/EXTERNA.2013_FINAL_v2.sav D:/Dropbox/INE/Hospitalarias/Bases/SPSS/EXTERNA.2013_FINAL_v2.sav  /mnt/DataWin/Dropbox/INE/Hospitalarias/Bases/SPSS/EXTERNA.2013_FINAL_v2.sav"
hospitalariasInternas <- read.spss("/mnt/Data/Dropbox/INE/Hospitalarias/Bases/SPSS/INTERNA.2013_final_V2.sav" , to.data.frame = TRUE)
hospitalariasExternas <- read.spss("/mnt/Data/Dropbox/INE/Hospitalarias/Bases/SPSS/EXTERNA.2013_final_V2.sav")
#grafica<-qplot(DEPTORESIDEN, data=hospitalarias)
#grafica1<- grafica + geom_bar(fill="blue", color="black")
#grafica1<- grafica1 + theme(axis.text.x = element_text(angle = 90))
#grafica1<- grafica1 +  guides(colour = guide_legend("title"), size = guide_legend("title"),shape = guide_legend("title"))
#grafica1<- grafica1 + theme(axis.line = element_line(color=c(10,1),size=2))
#grafica1<- grafica1 + labs(title="INE", x="Departamentos", y="Visitas medicas")
#grafica1
#PREPARACION DEL FORMATO DE LAS GRAFICAS
fontSize = 10
themeDefault <- theme_set(theme_gray())
ineTheme <- theme_update(
#Cambiando los aspectos del texto
text= element_text(family = "Open Sans Condensed Light", size = fontSize),
axis.text.x = element_text(vjust = 0.5, hjust=1, angle = 90)
)
theme_set(ineTheme)
theme_get()
#tikz('pruebaLatex.tex', standAlone = TRUE, width=3.88, height=2.71)
porDepartamentoInternas <- as.data.frame(with(hospitalariasInternas, table(DEPTORESIDEN)))
porDepartamentoInternas <- ddply(porDepartamentoInternas, "DEPTORESIDEN" ,transform , Porcentaje=(Freq/sum(porDepartamento$Freq)*100))
distDepartamentos <- ggplot(porDepartamentoInternas, aes(x = DEPTORESIDEN, y = Porcentaje,))
distDepartamentos <- distDepartamentos + geom_bar(stat = 'identity',fill = 'blue')+ geom_text(aes(label= round(Porcentaje,1) ),size=2, angle = 90, hjust=-0.2, vjust = 0.5)
#distDepartamentos <- distDepartamentos + theme(axis.text.x = element_text(vjust=0.5, hjust =1,angle = 90))
distDepartamentos <- distDepartamentos + scale_y_continuous(breaks = NULL,expand= c(0,0), limits = c(0, 1.05*max(porDepartamentoInternas$Porcentaje))) + scale_x_discrete(expand = waiver())
distDepartamentos <- distDepartamentos + theme(panel.background = element_rect(fill = "white"))
distDepartamentos <- distDepartamentos + labs(x="",y= "")  +theme(plot.margin= unit(c(0,0,0,0), "mm") )
distDepartamentos
theme_set(ineTheme)
install.packages('mailR')
library('mailR')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
q
q()
library(funcionesINE)
##############################DESIGUALDAD#########################################
library(funcionesINE)
desigualdad <- leerLibro(ruta = '/home/hugo/Documents/Encovi Principales Resultados/Libros/desigualdadCSV.xlsx')
escribirCSV(lista = desigualdad, ruta = '/home/hugo/Documents/Encovi Principales Resultados/CSV/2/')
ENC2<- cargaMasiva("/home/hugo/Documents/Encovi Principales Resultados/CSV/2/")
ENC2
desigualdad <- leerLibro(ruta = '/home/hugo/Documents/Encovi Principales Resultados/Libros/desigualdadCSV.xlsx')
##############################DESIGUALDAD#########################################
library(funcionesINE)
library(xlsx)
library(xlsxjar)
##############################DESIGUALDAD#########################################
library(funcionesINE)
library(xlsx)
library(xlsxjars)
desigualdad <- leerLibro(ruta = '/home/hugo/Documents/Encovi Principales Resultados/Libros/desigualdadCSV.xlsx')
desigualdad <- leerLibro(ruta = '/home/hugo/Documents/Encovi Principales Resultados/Libros/desigualdadCSV.xlsx')
desigualdad <- leerLibro(ruta = '/home/hugo/Documents/Encovi Principales Resultados/Libros/desigualdadCSV.xlsx')
desigualdad <- leerLibro(ruta = '/home/hugo/Documents/Encovi Principales Resultados/Libros/desigualdadCSV.xlsx')
source('/mnt/datos/GitHub/ResultadosEncovi/R/pobreaza.R')
library(funcionesINE)
library(xlsx)
library(xlsxjars)
pobreza <- leerLibroNormal('/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCocinado.xlsx')
escribirCSV(pobreza, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSVENCOVI/')
pobrezaCSV <- leerLibro(ruta = '/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCSV.xlsx')
escribirCSV(lista = pobrezaCSV, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSV/1/')
anual()
ENC1<- cargaMasiva("/mnt/datos/GitHub/ResultadosEncovi/CSV/1")
library(funcionesINE)
library(xlsx)
library(xlsxjars)
pobreza <- leerLibroNormal('/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCocinado.xlsx')
escribirCSV(pobreza, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSVENCOVI/')
pobrezaCSV <- leerLibro(ruta = '/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCSV.xlsx')
escribirCSV(lista = pobrezaCSV, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSV/1/')
anual()
ENC1<- cargaMasiva("/mnt/datos/GitHub/ResultadosEncovi/CSV/1")
library(funcionesINE)
library(xlsx)
library(xlsxjars)
pobreza <- leerLibroNormal('/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCocinado.xlsx')
escribirCSV(pobreza, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSVENCOVI/')
pobrezaCSV <- leerLibro(ruta = '/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCSV.xlsx')
escribirCSV(lista = pobrezaCSV, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSV/1/')
ENC1
source('/mnt/datos/GitHub/ResultadosEncovi/R/pobreaza.R')
##############################DESIGUALDAD#########################################
library(funcionesINE)
library(xlsx)
library(xlsxjars)
documento <- leerLibroNormal('/mnt/datos/GitHub/ResultadosEncovi/Libros/32- Desigualdad 1151115.xlsx')
escribirCSV(documento, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSVENCOVI/')
desigualdad <- leerLibro(ruta = '/mnt/datos/GitHub/ResultadosEncovi/Libros/desigualdadCSV.xlsx')
escribirCSV(lista = desigualdad, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSV/2/')
anual()
ENC2<- cargaMasiva("/mnt/datos/GitHub/ResultadosEncovi/CSV/2/")
g1<- graficaLinea(ENC2$"2_01",rotar = "h", precision = 2,inicio = 0.4, final = 0.65)
g1<- graficaLinea(ENC2$"2_01",rotar = "h", precision = 2,inicio = 0.3, final = 1)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_01.tex",g1)
g1<- graficaLinea(ENC2$"2_01",rotar = "h", precision = 2,inicio = 0.35, final = 1)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_01.tex",g1)
g1<- graficaLinea(ENC2$"2_01",rotar = "h", precision = 2,inicio = 0.2, final = 0.7)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_01.tex",g1)
g2<- graficaLinea(ENC2$"2_02",rotar = "h",  precision = 2,inicio = 0.2, final = 0.7)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_02.tex",g2)
g2<- graficaLinea(ENC2$"2_02",rotar = "h",  precision = 2,inicio = 0.25, final = 0.65)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_02.tex",g2)
g2<- graficaLinea(ENC2$"2_02",rotar = "h",  precision = 2,inicio = 0.25, final = 0.60)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_02.tex",g2)
g2<- graficaLinea(ENC2$"2_02",rotar = "h",  precision = 2,inicio = 0.25, final = 0.55)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_02.tex",g2)
g3<- graficaLinea(ENC2$"2_03",rotar = "h",  precision = 2, inicio = 0.35, final = 1.2)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_03.tex",g3)
g3<- graficaLinea(ENC2$"2_03",rotar = "h",  precision = 2, inicio = 0.35, final = 0.95)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_03.tex",g3)
g4<- graficaLinea(ENC2$"2_04",rotar = "h",  precision = 2,inicio = 0.35, final = 0.95)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_04.tex",g4)
g4<- graficaLinea(ENC2$"2_04",rotar = "h",  precision = 2,inicio = 0.35, final = 0.8)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_04.tex",g4)
g4<- graficaLinea(ENC2$"2_04",rotar = "h",  precision = 2,inicio = 0.3, final = 0.8)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_04.tex",g4)
g5<- graficaLinea(ENC2$"2_05",rotar = "h", inicio = 0, final = 5)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_05.tex",g5)
g5<- graficaLinea(ENC2$"2_05",rotar = "h", inicio = 0, final = 4)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_05.tex",g5)
g6<- graficaLinea(ENC2$"2_06",rotar = "h", inicio = 40, final = 70)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_06.tex",g6)
g6<- graficaLinea(ENC2$"2_06",rotar = "h", inicio = 40, final = 65)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_06.tex",g6)
g7<- graficaLinea(ENC2$"2_07",rotar = "h", inicio = 10, final = 45)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_07.tex",g7)
g7<- graficaLinea(ENC2$"2_07",rotar = "h", inicio = 10, final = 40)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_07.tex",g7)
g7<- graficaLinea(ENC2$"2_07",rotar = "h", inicio = 10, final = 35)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/2_07.tex",g7)
g1<- graficaLinea(ENC1$"1_01",rotar = "h", inicio = 4000, final = 11000)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_01.tex",g1)
g1<- graficaLinea(ENC1$"1_01",rotar = "h", inicio = 3000, final = 11000)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_01.tex",g1)
g1<- graficaLinea(ENC1$"1_01",rotar = "h", inicio = 2000, final = 12000)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_01.tex",g1)
g1<- graficaLinea(ENC1$"1_01",rotar = "h", inicio = 1000, final = 12000)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_01.tex",g1)
g1<- graficaLinea(ENC1$"1_01",rotar = "h", inicio = 0, final = 12000)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_01.tex",g1)
g2<- graficaLinea(ENC1$"1_02",rotar = "h", inicio = 40, final = 70)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_02.tex",g2)
g2<- graficaLinea(ENC1$"1_02",rotar = "h", inicio = 40, final = 60)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_02.tex",g2)
g2<- graficaLinea(ENC1$"1_02",rotar = "h", inicio = 30, final = 65)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_02.tex",g2)
g2<- graficaLinea(ENC1$"1_02",rotar = "h", inicio = 25, final = 69)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_02.tex",g2)
g2<- graficaLinea(ENC1$"1_02",rotar = "h", inicio = 25, final = 63)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_02.tex",g2)
g2<- graficaLinea(ENC1$"1_02",rotar = "h", inicio = 20, final = 63)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_02.tex",g2)
g4<- graficaColCategorias(ENC1$"1_03",ancho = 0.4,etiquetasCategorias = "A",
ruta = "/mnt/datos/GitHub/ResultadosEncovi/graficas/1_03.tex",etiquetas = "h")
g4<- graficaColCategorias(ENC1$"1_03",ancho = 0.55,etiquetasCategorias = "A",
ruta = "/mnt/datos/GitHub/ResultadosEncovi/graficas/1_03.tex",etiquetas = "h")
g4<- graficaColCategorias(ENC1$"1_03",ancho = 0.6,etiquetasCategorias = "A",
ruta = "/mnt/datos/GitHub/ResultadosEncovi/graficas/1_03.tex",etiquetas = "h")
library(funcionesINE)
library(xlsx)
library(xlsxjars)
pobreza <- leerLibroNormal('/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCocinado.xlsx')
escribirCSV(pobreza, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSVENCOVI/')
pobrezaCSV <- leerLibro(ruta = '/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCSV.xlsx')
escribirCSV(lista = pobrezaCSV, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSV/1/')
anual()
ENC1<- cargaMasiva("/mnt/datos/GitHub/ResultadosEncovi/CSV/1", codificacion = 'utf8' )
g4<- graficaColCategorias(ENC1$"1_03",ancho = 0.6,etiquetasCategorias = "A",
ruta = "/mnt/datos/GitHub/ResultadosEncovi/graficas/1_03.tex",etiquetas = "h")
g5<- graficaColCategorias(ENC1$"1_04", ancho = 0.6,  etiquetasCategorias = "A",
ruta = "/mnt/datos/GitHub/ResultadosEncovi/graficas/1_04.tex",etiquetas = "h")
g11<- graficaLinea(ENC1$"1_08",rotar = "h", inicio = 0, final = 8000)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_08.tex",g11)
g11<- graficaLinea(ENC1$"1_08",rotar = "h", inicio = 0, final = 7000)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_08.tex",g11)
g3<- graficaLinea(ENC1$"1_09",rotar = "h", inicio = 0, final = 30)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_09.tex",g3)
g3<- graficaLinea(ENC1$"1_09",rotar = "h", inicio = 0, final = 27)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_09.tex",g3)
g6<- graficaColCategorias(ENC1$"1_10", ancho = 0.6 ,etiquetasCategorias = "A",
ruta = "/mnt/datos/GitHub/ResultadosEncovi/graficas/1_10.tex",etiquetas = "h")
g7<- graficaColCategorias(ENC1$"1_11", ancho = 0.6 ,etiquetasCategorias = "A",
ruta = "/mnt/datos/GitHub/ResultadosEncovi/graficas/1_11.tex",etiquetas = "h")
g8<- graficaLinea(ENC1$"1_13",rotar = "h", inicio = 0, final = 30)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_13.tex",g8)
g8<- graficaLinea(ENC1$"1_13",rotar = "h", inicio = 0, final = 26)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_13.tex",g8)
g9<- graficaLinea(ENC1$"1_15",rotar = "h", inicio = 0, final = 15)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_15.tex",g9)
g9<- graficaLinea(ENC1$"1_15",rotar = "h", inicio = 0, final = 15)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_15.tex",g9)
g9
ENC1
ENC1$´1_15´
ENC1$1_13
ENC1$'1_13'
ENC1$'1_14'
ENC1$'1_15'
g8<- graficaLinea(ENC1$"1_14",rotar = "h", inicio = 0, final = 26)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_14.tex",g8)
g8
g8<- graficaLinea(ENC1$"1_14",rotar = "h", inicio = 0, final = 7)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_14.tex",g8)
g10<- graficaLinea(ENC1$"1_16",rotar = "h", inicio =  0, final = 20)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_16.tex",g10)
g10<- graficaLinea(ENC1$"1_16",rotar = "h", inicio =  0, final = 15)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_16.tex",g10)
library(funcionesINE)
library(xlsx)
library(xlsxjars)
pobreza <- leerLibroNormal('/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCocinado.xlsx')
escribirCSV(pobreza, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSVENCOVI/')
pobrezaCSV <- leerLibro(ruta = '/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCSV.xlsx')
escribirCSV(lista = pobrezaCSV, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSV/1/')
anual()
ENC1<- cargaMasiva("/mnt/datos/GitHub/ResultadosEncovi/CSV/1", codificacion = 'utf8' )
g <- graficaCol(ENC1$"1_18", ordenar = F)
g <- etiquetasHorizontales(g)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_18.tex",g1)
g <- graficaCol(ENC1$"1_18", ordenar = F)
g <- etiquetasHorizontales(g)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/1_18.tex",g)
source('/mnt/datos/GitHub/ResultadosEncovi/R/odm.R')
g14
g16
source('~/.active-rstudio-document')
g16<- graficaLinea(ENC3$'3_16',rotar = "h", precision = 1, inicio = 30, final = 50)
exportarLatex('/mnt/datos/GitHub/ResultadosEncovi/graficas/3_16.tex', g16)
g16<- graficaLinea(ENC3$'3_16',rotar = "h", precision = 1, inicio = 30, final = 46)
exportarLatex('/mnt/datos/GitHub/ResultadosEncovi/graficas/3_16.tex', g16)
g20
g19
g19<- graficaLinea(ENC3$"3_19",rotar = "h", inicio = 20, final = 80)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/3_19.tex",g19)
g19<- graficaLinea(ENC3$"3_19",rotar = "h", inicio = 20, final = 70)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/3_19.tex",g19)
G23
g23
24
g24
g22
g22<- graficaLinea(ENC3$"3_22",rotar = "h", inicio = 20, final = 45)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/3_22.tex",g22)
g22
ENC3$"3_22"
g22<- graficaLinea(ENC3$"3_22",rotar = "h", inicio = 20, final = 65)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/3_22.tex",g22)
g22
g22<- graficaLinea(ENC3$"3_22",rotar = "h", inicio = 20, final = 60)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/3_22.tex",g22)
g22
g22<- graficaLinea(ENC3$"3_22",rotar = "h", inicio = 20, final = 60)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/3_22.tex",g22)
g22<- graficaLinea(ENC3$"3_22",rotar = "h", inicio = 20, final = 58)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/3_22.tex",g22)
g26
g25
g27
g28
g28<- graficaLinea(ENC3$"3_28",rotar = "h",inicio = 32, final = 60)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/3_28.tex",g28)
g23
g25
g25<- graficaLinea(ENC3$"3_25",rotar = "h", inicio = 65, final= 80)
exportarLatex("/mnt/datos/GitHub/ResultadosEncovi/graficas/3_25.tex",g25)
library(funcionesINE)
library(xlsx)
library(xlsxjars)
pobreza <- leerLibroNormal('/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCocinado.xlsx')
escribirCSV(pobreza, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSVENCOVI/')
pobrezaCSV <- leerLibro(ruta = '/mnt/datos/GitHub/ResultadosEncovi/Libros/pobrezaCSV.xlsx')
escribirCSV(lista = pobrezaCSV, ruta = '/mnt/datos/GitHub/ResultadosEncovi/CSV/1/')
anual()
ENC1<- cargaMasiva("/mnt/datos/GitHub/ResultadosEncovi/CSV/1", codificacion = 'utf8' )
source('/mnt/datos/GitHub/unfpa/generacion.R')
install.packages('dplyr')
install.packages('survey')
source('/mnt/datos/GitHub/unfpa/generacion.R')
install.packages('dplyr')
install.packages('Rcpp')
setwd('/mnt/datos/GitHub/unfpa/')
source('/mnt/datos/GitHub/unfpa/graficas.R')
ENC
g<- graficaLinea(ENC$"1_01", inicio=0,rotar = "h")
